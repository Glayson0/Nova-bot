"""
Esse arquivo cont√©m todas as fun√ß√µes relacionadas aos √¥nibus da Unicamp.
"""
import datetime as dt

from busSchedule import *
from time_utils import *


# Fun√ß√µes auxiliares
def next_bus_from_now() -> tuple[str, str]:
    """Retorna o hor√°rio em datetime do pr√≥ximo √¥nibus a partir do hor√°rio em que a fun√ß√£o foi chamada."""
    day_type = is_business_day(dt.datetime.now().weekday())
    day_type = "business_day" if day_type else "weekend"

    return BUS_SCHEDULER[day_type]

# Fun√ß√µes principais
def createNextBusMessage() -> str:
    # TODO
    # Pode implementar o resto com a nova l√≥gica :p

    # String formatada
    next2busText = f"""
üöå HOR√ÅRIOS DOS PR√ìXIMOS √îNIBUS

‚åö Hor√°rio atual: {dt_to_str(CURRENT_DATETIME)}

‚û°Ô∏è IDA \(Moradia \-\> Unicamp\):
    01\) \) \) \) \) \) \) \) \) \) \) \) \) \) \) \) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) ) ) \) {timesOutput[0]}
    02\) {timesOutput[1]}

‚¨ÖÔ∏è VOLTA \(Unicamp \-\> Moradia\):
    01\) {timesOutput[2]}
    02\) {timesOutput[3]}
"""
    return next2busText

def createAvailableBusListMessage(busSchedule:list) -> str:
    """Cria uma string com todos os hor√°rios do dia de √¥nibus, riscando os hor√°rios que j√° passaram e destacando o pr√≥ximo."""
    # BUG
    # Retornar toda a lista de onibus que ja foram n√£o vale a pena
    # √â muita informa√ß√£o e provavelmente o usuario n√£o quer
    # Mas pode reeimplementar isso se quiser usando a nova l√≥gica
